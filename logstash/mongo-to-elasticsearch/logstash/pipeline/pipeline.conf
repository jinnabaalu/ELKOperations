input {
  jdbc {
    jdbc_driver_library => "/usr/share/logstash/drivers/mongojdbc4.9.0.jar"
    jdbc_driver_class => "Java::com.wisecoders.dbschema.mongodb.JdbcDriver"
    jdbc_connection_string => "jdbc:mongodb://mongodb:27017/moviedb?authSource=admin"
    jdbc_user => ""
    jdbc_password => ""
    schedule => "* * * * *"
    statement => 'db.movies.aggregate([
      {
        $addFields: {
          _id: { $toString: "$_id" },
          releaseDate: {
            $cond: {
              if: { $eq: [{ $type: "$releaseDate" }, "date"] },
              then: "$releaseDate",
              else: { $dateFromString: { dateString: "$releaseDate" } }
            }
          },
          "director": {
            "directorId": { "$toString": { "$ifNull": ["$director._id", null] } },
            "name": { "$ifNull": ["$director.name", "Unknown"] },
            "age": { "$ifNull": ["$director.age", null] },
            "awardsWon": { "$ifNull": ["$director.awardsWon", 0] }
          },
          cast: {
            $map: {
              input: { $ifNull: ["$cast", []] },
              as: "actor",
              in: {
                name: "$$actor.name",
                role: "$$actor.role",
                age: "$$actor.age"
              }
            }
          }
        }
      },
      {
        "$unset": "director._id"
      },
      {
        $project: {
          _id: 1,
          title: 1,
          releaseDate: 1,
          director: 1,
          genres: 1,
          releaseYear: 1,
          rating: 1,
          isAvailable: 1,
          cast: 1,
          boxOffice: 1
        }
      }
    ])'
  }
}

filter {
  mutate {
    add_field => { "[@metadata][document]" => "%{[document]}" }
  }
}

output {
  elasticsearch {
    hosts => ["https://es01:9200"]
    index => "movie"
    document_id => "%{[document][_id]}"
    user => "elastic"
    password => "elastic123"
    data_stream => auto
    ssl => true
    ssl_certificate_verification => false
    action => "index"
  }
}